{"version":3,"sources":["components/Header.jsx","context/CategoryContext.jsx","context/RecipesContext.jsx","components/Formulario.jsx","context/ModalContext.jsx","components/Recipe.jsx","components/ListRecipes.jsx","App.js","index.js"],"names":["Header","className","CategoryContext","createContext","CategoryProvider","props","useState","category","setCategory","useEffect","a","axios","get","categories","data","drinks","getCategory","Provider","value","children","RecipesContext","RecipesProvider","recipe","setRecipe","nameIngredient","saveSearch","setSaveSearch","consult","setConsult","url","result","getRecipes","Formulario","useContext","search","setSearch","optionSearch","e","target","name","action","onSubmit","preventDefault","onChange","type","placeholder","map","cat","strCategory","ModalContext","ModalProvider","idRecipe","setIdRecipe","getRecipe","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","color","Recipe","rec","modalStyle","open","setOpen","clases","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredients","i","push","showIngredients","ListRecipes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a081af3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <header className=\"bg-alert jumbotron text-center\">\n            <h1>Look up drink recipes</h1>\n        </header>\n    )\n}\n\nexport default Header\n","import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const CategoryContext = createContext();\n\n//provider d'on surten les dades i les funcions, on estan les funcions i state\n\nconst CategoryProvider = (props) => {\n\n    const [category, setCategory] = useState([]);\n\n    useEffect(() => {\n        const getCategory = async () => {\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\n\n            const categories = await axios.get(url)\n            setCategory(...category, categories.data.drinks)\n            \n        }\n\n        getCategory();\n    }, [])\n\n    return (\n        <CategoryContext.Provider\n            value={{\n                category\n            }}>\n\n            {props.children}\n        </CategoryContext.Provider>\n    )\n}\n\nexport default CategoryProvider;","import React, { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nexport const RecipesContext = createContext();\n\nconst RecipesProvider = (props) => {\n\n    const [recipe, setRecipe] = useState([]); //el resultat\n    const [saveSearch, setSaveSearch] = useState({\n        nameIngredient: '',\n        category: ''\n    });\n\n    const [consult, setConsult] = useState(false)\n\n    useEffect(() => {\n        if (consult) {\n            const getRecipes = async () => {\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${saveSearch.nameIngredient}&c=${saveSearch.category}`;\n                \n                const result = await axios.get(url);\n                setRecipe(result.data.drinks);\n            \n            }\n\n            getRecipes();\n        }\n\n\n    }, [saveSearch])\n\n\n    return (\n        <RecipesContext.Provider\n            value={{\n                recipe,\n                setSaveSearch,\n                setConsult\n            }}\n        >\n            {props.children}\n        </RecipesContext.Provider>\n    )\n}\n\nexport default RecipesProvider;","import React, { useContext, useState } from 'react'\nimport { CategoryContext } from '../context/CategoryContext'\nimport { RecipesContext } from '../context/RecipesContext'\n\n\nconst Formulario = () => {\n\n    const { category } = useContext(CategoryContext);\n    const { setSaveSearch, setConsult } = useContext(RecipesContext);\n\n\n    const [search, setSearch] = useState({\n        nameIngredient: '',\n        category: ''\n    })\n\n    const optionSearch = (e) => {\n        setSearch({\n            ...search,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    return (\n\n        <form action=\"\" className=\"col-12\" onSubmit={e => {\n            e.preventDefault()\n            setSaveSearch(search)\n            setConsult(true)\n        }}>\n            <fieldset className=\"text-center\">\n                <legend>Search drinks by category or ingredient</legend>\n            </fieldset>\n\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <input\n                        onChange={optionSearch}\n                        type=\"text\"\n                        name=\"nameIngredient\" className=\"form-control\"\n                        placeholder=\"search ingredient\" />\n                </div>\n                <div className=\"col-md-4\">\n                    <select\n                        onChange={optionSearch}\n                        className=\"form-control\"\n                        name=\"category\">\n                        <option value=\"\">Select option</option>\n                        {category.map(cat => (\n                            <option key={cat.strCategory} value={cat.strCategory}>{cat.strCategory}</option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"col-md-4\">\n                    <input type=\"submit\" value=\"Send\" className=\"btn btn-block btn-primary\" />\n                </div>\n            </div>\n        </form>\n\n    )\n}\n\nexport default Formulario\n","import React, { createContext, useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport const ModalContext = createContext();\n\nconst ModalProvider = (props) => {\n\n    //guardar id que l'usuari dona click\n\n    const [idRecipe, setIdRecipe] = useState(null);\n    const [recipe, setRecipe] = useState({})\n\n    useEffect(() => {\n\n        const getRecipe = async () => {\n            if (!idRecipe) {\n                return\n            }\n\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idRecipe}`;\n\n            const result = await axios.get(url);\n            setRecipe(result.data.drinks[0]);\n\n        }\n\n        getRecipe();\n    }, [idRecipe])\n\n    return (\n        <ModalContext.Provider\n            value={{\n                recipe,\n                setIdRecipe,\n                setRecipe\n            }}\n        >\n            {props.children}\n        </ModalContext.Provider>\n    )\n}\n\nexport default ModalProvider;\n","import React, { useContext, useState } from 'react'\nimport { ModalContext } from '../context/ModalContext'\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        color: \"black\"\n    },\n}));\n\nconst Recipe = ({ rec }) => {\n\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n\n    const clases = useStyles();\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const { recipe, setIdRecipe, setRecipe } = useContext(ModalContext);\n\n    const showIngredients = (recipe) => {\n\n        let ingredients = [];\n\n        for (let i = 1; i < 16; i++) {\n            if (recipe[`strIngredient${i}`]) {\n                ingredients.push(\n                    <li>{recipe[`strIngredient${i}`]} - {recipe[`strMeasure${i}`]}</li>\n                )\n            }\n\n        }\n\n        return ingredients;\n    }\n    return (\n        <div className=\"col-md-4 mb-3\">\n            <div className=\"card\">\n                <h2 className=\"card-header\">{rec.strDrink}</h2>\n                <img src={rec.strDrinkThumb} alt={rec.strDrink} className=\"card-img-top\" />\n\n                <div className=\"card-body\">\n                    <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={() => {\n                        setIdRecipe(rec.idDrink);\n                        setRecipe({});\n                        handleOpen();\n                    }}>\n                        See recipe\n                    </button>\n\n                    <Modal\n                        open={open}\n                        onClose={() => {\n                            handleClose();\n                            setIdRecipe(null);\n                        }}\n                    >\n                        <div style={modalStyle} className={clases.paper}>\n                            <h2>{recipe.strDrink}</h2>\n                            <h3 className=\"mt-4\"> Instructions </h3>\n                            <p>{recipe.strInstructions}</p>\n                            <img src={recipe.strDrinkThumb} alt=\"\" className=\"img-fluid my-4\" />\n                            <h3>Ingredients</h3>\n                            <ul>\n                                {showIngredients(recipe)}\n                            </ul>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Recipe\n","import React, { Fragment, useContext } from 'react'\nimport { RecipesContext } from \"../context/RecipesContext\"\nimport Recipe from './Recipe'\n\nconst ListRecipes = () => {\n\n    const { recipe } = useContext(RecipesContext);\n    \n    return (\n     <Fragment>\n            <div className=\"row\">\n                <div className=\"col-12 my-4\">\n                    <h1 className=\"text-center\">List</h1>\n                </div>            \n            </div>\n            <div className=\"row\">\n                {recipe.map(rec => {\n                   return <Recipe \n                    key={rec.idDrink}\n                    rec={rec}/>\n                })}\n\n            </div>\n     </Fragment>\n    )\n}\n\nexport default ListRecipes\n","import \"typeface-roboto\";\nimport \"bootswatch/dist/superhero/bootstrap.min.css\";\nimport React, { Fragment } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListRecipes from \"./components/ListRecipes\";\n\nimport CategoryProvider from \"./context/CategoryContext\";\nimport RecipesProvider from \"./context/RecipesContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nconst App = () => {\n  return (\n    <CategoryProvider>\n      <RecipesProvider>\n        <ModalProvider>\n          <Header />\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <Formulario />\n            </div>\n            <ListRecipes />\n          </div>\n        </ModalProvider>\n      </RecipesProvider>\n    </CategoryProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}